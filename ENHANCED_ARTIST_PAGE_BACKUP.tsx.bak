'use client';
import { useState } from 'react';
import { useParams } from 'next/navigation';
import Link from 'next/link';
import { 
  StarIcon,
  UserGroupIcon,
  ClockIcon,
  TruckIcon,
  GlobeAltIcon,
  MusicalNoteIcon,
  CheckCircleIcon,
  ArrowLeftIcon,
  ShareIcon,
  HeartIcon,
  MapPinIcon
} from '@heroicons/react/24/outline';
import { Button } from '@/components/ui/Button';
import { Card, CardContent } from '@/components/ui/Card';
import { Badge } from '@/components/ui/Badge';
import { PhotoGallery } from '@/components/media/PhotoGallery';
import { PhotoLightbox } from '@/components/media/PhotoLightbox';
import { VideoPlayer } from '@/components/media/VideoPlayer';
import { mockArtists } from '@/data/mockData';

export default function ArtistProfilePage() {
  const params = useParams();
  const artistId = params.id as string;
  
  const artist = mockArtists.find(a => a.id === artistId);
  const [lightboxOpen, setLightboxOpen] = useState(false);
  const [lightboxIndex, setLightboxIndex] = useState(0);
  const [isFollowing, setIsFollowing] = useState(false);
  const [showShareMenu, setShowShareMenu] = useState(false);
  
  // Get related artists (similar genre/region)
  const relatedArtists = mockArtists
    .filter(a => a.id !== artistId && a.approved)
    .slice(0, 3);

  if (!artist) {
    return (
      <div className="min-h-screen bg-gray-50 flex items-center justify-center">
        <div className="text-center">
          <h1 className="text-2xl font-bold text-gray-900 mb-4">Artist Not Found</h1>
          <Link href="/artists">
            <Button>Back to Artists</Button>
          </Link>
        </div>
      </div>
    );
  }

  // Combine all photos for gallery
  const allPhotos = [...(artist.performancePhotos || []), ...(artist.bandPhotos || [])];
  
  const getGenre = () => {
    const genres = ['folk', 'rock', 'indie', 'country', 'blues', 'jazz', 'experimental'];
    const bio = artist.bio.toLowerCase();
    const foundGenre = genres.find(genre => bio.includes(genre));
    return foundGenre || 'music';
  };

  const handlePhotoClick = (index: number) => {
    setLightboxIndex(index);
    setLightboxOpen(true);
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-neutral-50 to-secondary-50">
      {/* Enhanced Navigation Bar with backdrop blur */}
      <div className="sticky top-0 z-40 bg-white/95 backdrop-blur-md border-b border-neutral-200 shadow-sm">
        <div className="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8">
          <div className="flex items-center justify-between h-16">
            <Link href="/artists">
              <Button variant="ghost" size="sm" className="hover:bg-primary-50 hover:text-primary-700">
                <ArrowLeftIcon className="w-4 h-4 mr-2" />
                Back to artists
              </Button>
            </Link>
            <div className="flex items-center space-x-3">
              <div className="relative">
                <Button 
                  variant="ghost" 
                  size="sm" 
                  className="hover:bg-primary-50 hover:text-primary-700"
                  onClick={() => setShowShareMenu(!showShareMenu)}
                >
                  <ShareIcon className="w-4 h-4 mr-2" />
                  Share
                </Button>
                {showShareMenu && (
                  <div className="absolute top-full right-0 mt-2 w-48 bg-white rounded-lg shadow-lg border border-neutral-200 py-2 z-50">
                    <button className="w-full px-4 py-2 text-left text-sm text-neutral-700 hover:bg-neutral-50 flex items-center">
                      <span className="w-4 h-4 mr-3">ðŸ“‹</span>
                      Copy Link
                    </button>
                    <button className="w-full px-4 py-2 text-left text-sm text-neutral-700 hover:bg-neutral-50 flex items-center">
                      <span className="w-4 h-4 mr-3">ðŸ“§</span>
                      Email
                    </button>
                    <button className="w-full px-4 py-2 text-left text-sm text-neutral-700 hover:bg-neutral-50 flex items-center">
                      <span className="w-4 h-4 mr-3">ðŸ“±</span>
                      Social Media
                    </button>
                  </div>
                )}
              </div>
              <Button 
                variant="ghost" 
                size="sm" 
                className={`hover:bg-secondary-50 transition-all duration-300 ${
                  isFollowing ? 'text-secondary-700 bg-secondary-50' : 'hover:text-secondary-700'
                }`}
                onClick={() => setIsFollowing(!isFollowing)}
              >
                <HeartIcon className={`w-4 h-4 mr-2 transition-all duration-300 ${
                  isFollowing ? 'fill-current text-secondary-600' : ''
                }`} />
                {isFollowing ? 'Following' : 'Follow'}
              </Button>
            </div>
          </div>
        </div>
      </div>

      {/* Hero Section with Enhanced Typography */}
      <div className="relative">
        {/* Background Pattern */}
        <div className="absolute inset-0 bg-gradient-to-br from-primary-50/30 to-secondary-50/30">
          <div className="absolute inset-0 bg-[radial-gradient(circle_at_30%_20%,rgba(199,153,159,0.1),transparent_70%)]" />
          <div className="absolute inset-0 bg-[radial-gradient(circle_at_70%_80%,rgba(139,176,151,0.1),transparent_70%)]" />
        </div>
        
        <div className="relative mx-auto max-w-7xl px-4 sm:px-6 lg:px-8 pt-12 pb-16">
          {/* Enhanced Header with Better Visual Hierarchy */}
          <div className="mb-12">
            {/* Breadcrumb */}
            <nav className="flex items-center space-x-2 text-sm text-neutral-600 mb-6">
              <Link href="/" className="hover:text-primary-600 transition-colors">Home</Link>
              <span>/</span>
              <Link href="/artists" className="hover:text-primary-600 transition-colors">Artists</Link>
              <span>/</span>
              <span className="text-neutral-800 font-medium">{artist.name}</span>
            </nav>
            
            <div className="flex flex-col lg:flex-row lg:items-start lg:justify-between gap-8">
              <div className="flex-1">
                {/* Artist Name with Dramatic Typography */}
                <div className="mb-6">
                  <h1 className="text-5xl lg:text-6xl font-bold text-neutral-900 mb-3 leading-tight">
                    {artist.name}
                  </h1>
                  <div className="h-1 w-24 bg-gradient-to-r from-primary-400 to-secondary-400 rounded-full mb-4" />
                </div>
                
                {/* Key Stats with Enhanced Visual Treatment */}
                <div className="grid grid-cols-2 lg:grid-cols-4 gap-4 mb-6">
                  <div className="bg-white/70 backdrop-blur-sm rounded-xl p-4 border border-neutral-200/50 shadow-sm">
                    <div className="flex items-center justify-center w-10 h-10 bg-primary-100 rounded-lg mb-2">
                      <StarIcon className="w-5 h-5 text-primary-600" />
                    </div>
                    <div className="text-2xl font-bold text-neutral-900">{artist.rating.toFixed(1)}</div>
                    <div className="text-xs text-neutral-600">{artist.reviewCount} reviews</div>
                  </div>
                  
                  <div className="bg-white/70 backdrop-blur-sm rounded-xl p-4 border border-neutral-200/50 shadow-sm">
                    <div className="flex items-center justify-center w-10 h-10 bg-secondary-100 rounded-lg mb-2">
                      <ClockIcon className="w-5 h-5 text-secondary-600" />
                    </div>
                    <div className="text-2xl font-bold text-neutral-900">{artist.yearsActive}</div>
                    <div className="text-xs text-neutral-600">years active</div>
                  </div>
                  
                  <div className="bg-white/70 backdrop-blur-sm rounded-xl p-4 border border-neutral-200/50 shadow-sm">
                    <div className="flex items-center justify-center w-10 h-10 bg-primary-100 rounded-lg mb-2">
                      <UserGroupIcon className="w-5 h-5 text-primary-600" />
                    </div>
                    <div className="text-2xl font-bold text-neutral-900">{artist.members.length}</div>
                    <div className="text-xs text-neutral-600">{artist.members.length === 1 ? 'solo artist' : 'members'}</div>
                  </div>
                  
                  <div className="bg-white/70 backdrop-blur-sm rounded-xl p-4 border border-neutral-200/50 shadow-sm">
                    <div className="flex items-center justify-center w-10 h-10 bg-secondary-100 rounded-lg mb-2">
                      <MapPinIcon className="w-5 h-5 text-secondary-600" />
                    </div>
                    <div className="text-2xl font-bold text-neutral-900">{artist.tourMonthsPerYear}</div>
                    <div className="text-xs text-neutral-600">months touring</div>
                  </div>
                </div>
                
                {/* Genre and Status Badges */}
                <div className="flex flex-wrap items-center gap-3 mb-6">
                  <Badge variant="default" className="text-sm bg-primary-100 text-primary-800 border-primary-200">
                    {getGenre()}
                  </Badge>
                  {artist.approved && (
                    <Badge variant="success" className="text-sm bg-secondary-100 text-secondary-800 border-secondary-200">
                      <CheckCircleIcon className="w-4 h-4 mr-1" />
                      Verified Artist
                    </Badge>
                  )}
                  {artist.requireHomeStay && (
                    <Badge variant="warning" className="text-sm">
                      Needs Lodging
                    </Badge>
                  )}
                </div>
                
                {/* Artist Bio with Better Typography */}
                <div className="prose prose-lg prose-neutral max-w-none">
                  <p className="text-lg text-neutral-700 leading-relaxed">
                    {artist.bio}
                  </p>
                </div>
              </div>
              
              {/* Enhanced Right Sidebar */}
              <div className="lg:w-80 flex-shrink-0">
                <div className="sticky top-24">
                  <Card className="bg-white/90 backdrop-blur-sm border-neutral-200/50 shadow-xl">
                    <CardContent className="p-6">
                      <div className="text-center mb-6">
                        <div className="w-20 h-20 bg-gradient-to-br from-primary-400 to-secondary-500 rounded-full mx-auto mb-4 flex items-center justify-center text-white font-bold text-2xl shadow-lg">
                          {artist.name.charAt(0)}
                        </div>
                        <h3 className="font-semibold text-neutral-900 text-lg mb-1">
                          {artist.name}
                        </h3>
                        <p className="text-neutral-600 text-sm">
                          {artist.yearsActive} years performing Â· {artist.reviewCount} reviews
                        </p>
                      </div>
                      
                      <div className="space-y-3">
                        <Link href={`/bookings/new?artistId=${artist.id}`}>
                          <Button size="lg" className="w-full bg-gradient-to-r from-primary-500 to-primary-600 hover:from-primary-600 hover:to-primary-700 shadow-lg hover:shadow-xl transition-all duration-300 group">
                            <span className="group-hover:scale-105 transition-transform duration-300">Book this artist</span>
                          </Button>
                        </Link>
                        <Button 
                          variant="outline" 
                          size="lg" 
                          className="w-full border-neutral-300 hover:border-primary-300 hover:bg-primary-50 hover:text-primary-700 transition-all duration-300"
                        >
                          Send Message
                        </Button>
                      </div>
                      
                      <div className="space-y-3 text-sm border-t border-neutral-200 pt-4">
                        <div className="flex justify-between items-center">
                          <span className="text-neutral-600">Response time</span>
                          <span className="font-medium text-secondary-700">Within 4 hours</span>
                        </div>
                        <div className="flex justify-between items-center">
                          <span className="text-neutral-600">Cancellation policy</span>
                          <Badge variant={artist.cancellationPolicy === 'flexible' ? 'success' : 'warning'} className="text-xs">
                            {artist.cancellationPolicy}
                          </Badge>
                        </div>
                        <div className="flex justify-between items-center">
                          <span className="text-neutral-600">Shows this year</span>
                          <span className="font-medium text-neutral-900">24</span>
                        </div>
                      </div>
                    </CardContent>
                  </Card>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
      
      <div className="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8 pb-16">

        {/* Enhanced Content Sections */}
        <div className="space-y-16">
          {/* Featured Video Section */}
          {artist.livePerformanceVideo && (
            <section className="bg-white rounded-2xl shadow-sm border border-neutral-200 overflow-hidden">
              <div className="p-8">
                <div className="flex items-center justify-between mb-6">
                  <div>
                    <h2 className="text-2xl font-bold text-neutral-900 mb-2">
                      Watch {artist.name} perform
                    </h2>
                    <p className="text-neutral-600">Experience their live performance</p>
                  </div>
                  <div className="flex items-center space-x-2">
                    <div className="w-2 h-2 bg-primary-500 rounded-full animate-pulse" />
                    <span className="text-sm text-neutral-600 font-medium">Live Performance</span>
                  </div>
                </div>
                <div className="rounded-xl overflow-hidden shadow-lg">
                  <VideoPlayer
                    videoUrl={artist.livePerformanceVideo}
                    title={`${artist.name} - Live Performance`}
                    thumbnailUrl={allPhotos[0]?.url}
                  />
                </div>
              </div>
            </section>
          )}

          {/* Performance Photos Section */}
          {allPhotos.length > 0 && (
            <section className="bg-white rounded-2xl shadow-sm border border-neutral-200 overflow-hidden">
              <div className="p-8">
                <div className="flex items-center justify-between mb-6">
                  <div>
                    <h2 className="text-2xl font-bold text-neutral-900 mb-2">
                      Performance Gallery
                    </h2>
                    <p className="text-neutral-600">{allPhotos.length} professional photos</p>
                  </div>
                  <Badge variant="default" className="bg-secondary-100 text-secondary-800">
                    {allPhotos.length} Photos
                  </Badge>
                </div>
                <PhotoGallery 
                  photos={allPhotos}
                  onPhotoClick={handlePhotoClick}
                />
              </div>
            </section>
          )}

          {/* About Section - Moved to Hero, removing duplicate */}

          {/* Band Members Section */}
          <section className="bg-white rounded-2xl shadow-sm border border-neutral-200 overflow-hidden">
            <div className="p-8">
              <div className="flex items-center justify-between mb-6">
                <div>
                  <h2 className="text-2xl font-bold text-neutral-900 mb-2">
                    {artist.members.length === 1 ? 'Solo Artist' : 'Meet the Band'}
                  </h2>
                  <p className="text-neutral-600">
                    {artist.members.length === 1 ? 'Individual performer' : `${artist.members.length} talented musicians`}
                  </p>
                </div>
                <Badge variant="default" className="bg-primary-100 text-primary-800">
                  {artist.members.length} {artist.members.length === 1 ? 'Member' : 'Members'}
                </Badge>
              </div>
              <div className="grid md:grid-cols-2 gap-6">
                {artist.members.map((member, index) => (
                  <div key={index} className="group flex items-center p-6 bg-gradient-to-br from-neutral-50 to-neutral-100 rounded-xl border border-neutral-200 hover:shadow-md transition-all duration-300">
                    <div className="w-14 h-14 bg-gradient-to-br from-primary-400 to-secondary-500 rounded-full flex items-center justify-center mr-4 shadow-lg group-hover:scale-110 transition-transform duration-300">
                      <MusicalNoteIcon className="w-7 h-7 text-white" />
                    </div>
                    <div>
                      <div className="font-semibold text-neutral-900 text-lg">{member.name}</div>
                      <div className="text-sm text-neutral-600 font-medium">{member.instrument}</div>
                    </div>
                  </div>
                ))}
              </div>
            </div>
          </section>

          {/* Tour & Logistics Section */}
          <section className="bg-white rounded-2xl shadow-sm border border-neutral-200 overflow-hidden">
            <div className="p-8">
              <div className="flex items-center justify-between mb-8">
                <div>
                  <h2 className="text-2xl font-bold text-neutral-900 mb-2">
                    Tour & Logistics
                  </h2>
                  <p className="text-neutral-600">Everything you need to know about hosting this artist</p>
                </div>
                <Badge variant="default" className="bg-secondary-100 text-secondary-800">
                  Tour Info
                </Badge>
              </div>
              
              <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-6">
                <div className="group bg-gradient-to-br from-primary-50 to-primary-100 rounded-xl p-6 border border-primary-200 hover:shadow-md transition-all duration-300">
                  <div className="flex items-center mb-4">
                    <div className="w-12 h-12 bg-primary-500 rounded-lg flex items-center justify-center mr-4 group-hover:scale-110 transition-transform duration-300">
                      <ClockIcon className="w-6 h-6 text-white" />
                    </div>
                    <div>
                      <div className="font-semibold text-neutral-900">Tour Schedule</div>
                      <div className="text-sm text-neutral-600">Annual touring</div>
                    </div>
                  </div>
                  <div className="text-lg font-bold text-primary-700">{artist.tourMonthsPerYear} months/year</div>
                  <div className="text-sm text-neutral-600 mt-1">Active on the road</div>
                </div>
                
                <div className="group bg-gradient-to-br from-secondary-50 to-secondary-100 rounded-xl p-6 border border-secondary-200 hover:shadow-md transition-all duration-300">
                  <div className="flex items-center mb-4">
                    <div className="w-12 h-12 bg-secondary-500 rounded-lg flex items-center justify-center mr-4 group-hover:scale-110 transition-transform duration-300">
                      <TruckIcon className="w-6 h-6 text-white" />
                    </div>
                    <div>
                      <div className="font-semibold text-neutral-900">Transport</div>
                      <div className="text-sm text-neutral-600">Tour vehicle</div>
                    </div>
                  </div>
                  <div className="text-lg font-bold text-secondary-700 capitalize">{artist.tourVehicle}</div>
                  <div className="text-sm text-neutral-600 mt-1">Touring setup</div>
                </div>

                <div className="group bg-gradient-to-br from-primary-50 to-primary-100 rounded-xl p-6 border border-primary-200 hover:shadow-md transition-all duration-300">
                  <div className="flex items-center mb-4">
                    <div className="w-12 h-12 bg-primary-500 rounded-lg flex items-center justify-center mr-4 group-hover:scale-110 transition-transform duration-300">
                      <MusicalNoteIcon className="w-6 h-6 text-white" />
                    </div>
                    <div>
                      <div className="font-semibold text-neutral-900">Sound System</div>
                      <div className="text-sm text-neutral-600">PA requirements</div>
                    </div>
                  </div>
                  <div className="text-lg font-bold text-primary-700">
                    {artist.ownSoundSystem ? 'Self-contained' : 'Needs PA'}
                  </div>
                  <div className="text-sm text-neutral-600 mt-1">
                    {artist.ownSoundSystem ? 'Brings own system' : 'House system required'}
                  </div>
                </div>
              </div>

              
              {/* Requirements & Special Notes */}
              <div className="mt-8 pt-8 border-t border-neutral-200">
                <h3 className="text-lg font-semibold text-neutral-900 mb-4">Requirements & Preferences</h3>
                <div className="flex flex-wrap gap-3 mb-6">
                  {artist.requireHomeStay && (
                    <Badge variant="warning" className="text-sm">Requires Lodging</Badge>
                  )}
                  {artist.ownSoundSystem && (
                    <Badge variant="success" className="text-sm">Brings Sound System</Badge>
                  )}
                  {artist.travelWithAnimals && (
                    <Badge variant="default" className="text-sm">Travels with Pets</Badge>
                  )}
                </div>
                
                {(artist.petAllergies || artist.dietaryRestrictions) && (
                  <div className="bg-neutral-50 rounded-lg p-4 border border-neutral-200">
                    <h4 className="font-medium text-neutral-900 mb-3">Special Considerations</h4>
                    <div className="space-y-2">
                      {artist.petAllergies && (
                        <div className="text-sm text-neutral-700">
                          <span className="font-medium text-neutral-900">Pet allergies:</span> {artist.petAllergies}
                        </div>
                      )}
                      {artist.dietaryRestrictions && (
                        <div className="text-sm text-neutral-700">
                          <span className="font-medium text-neutral-900">Dietary:</span> {artist.dietaryRestrictions}
                        </div>
                      )}
                    </div>
                  </div>
                )}
                
                {/* Performance Guarantee */}
                {artist.cancellationGuarantee && (
                  <div className="mt-6 bg-gradient-to-br from-secondary-50 to-secondary-100 border border-secondary-200 rounded-lg p-6">
                    <div className="flex items-start">
                      <div className="w-10 h-10 bg-secondary-500 rounded-lg flex items-center justify-center mr-4 flex-shrink-0">
                        <CheckCircleIcon className="w-5 h-5 text-white" />
                      </div>
                      <div>
                        <h4 className="font-semibold text-secondary-900 mb-2">Performance Guarantee</h4>
                        <p className="text-sm text-secondary-800 leading-relaxed">{artist.cancellationGuarantee}</p>
                      </div>
                    </div>
                  </div>
                )}
              </div>
            </div>
          </section>

          {/* Social Links & Music Platforms */}
          {Object.values(artist.socialLinks).some(link => link) && (
            <section className="bg-white rounded-2xl shadow-sm border border-neutral-200 overflow-hidden">
              <div className="p-8">
                <div className="flex items-center justify-between mb-6">
                  <div>
                    <h2 className="text-2xl font-bold text-neutral-900 mb-2">
                      Listen & Connect
                    </h2>
                    <p className="text-neutral-600">Follow {artist.name} on their platforms</p>
                  </div>
                  <Badge variant="default" className="bg-primary-100 text-primary-800">
                    Social Links
                  </Badge>
                </div>
                <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
                  {Object.entries(artist.socialLinks).map(([platform, url]) => {
                    if (!url) return null;
                    return (
                      <a
                        key={platform}
                        href={url}
                        target="_blank"
                        rel="noopener noreferrer"
                        className="group flex items-center p-4 bg-gradient-to-br from-neutral-50 to-neutral-100 border border-neutral-200 rounded-xl hover:from-primary-50 hover:to-primary-100 hover:border-primary-300 hover:shadow-md transition-all duration-300"
                      >
                        <div className="w-10 h-10 bg-gradient-to-br from-primary-400 to-secondary-500 rounded-lg flex items-center justify-center mr-3 group-hover:scale-110 transition-transform duration-300">
                          <GlobeAltIcon className="w-5 h-5 text-white" />
                        </div>
                        <div>
                          <div className="font-semibold capitalize text-neutral-900 group-hover:text-primary-700 transition-colors">{platform}</div>
                          <div className="text-xs text-neutral-600">Follow & listen</div>
                        </div>
                      </a>
                    );
                  })}
                </div>
              </div>
            </section>
          )}
        </div>
        
        {/* Related Artists Section */}
        {relatedArtists.length > 0 && (
          <section className="mt-16 bg-white rounded-2xl shadow-sm border border-neutral-200 overflow-hidden">
            <div className="p-8">
              <div className="flex items-center justify-between mb-6">
                <div>
                  <h2 className="text-2xl font-bold text-neutral-900 mb-2">
                    Similar Artists
                  </h2>
                  <p className="text-neutral-600">Other artists you might enjoy</p>
                </div>
                <Link href="/artists" className="text-primary-600 hover:text-primary-700 font-medium text-sm">
                  View all â†’
                </Link>
              </div>
              
              <div className="grid md:grid-cols-3 gap-6">
                {relatedArtists.map((relatedArtist) => {
                  const relatedPhotos = [...(relatedArtist.performancePhotos || []), ...(relatedArtist.bandPhotos || [])];
                  return (
                    <Link 
                      key={relatedArtist.id} 
                      href={`/artists/${relatedArtist.id}`}
                      className="group block bg-gradient-to-br from-neutral-50 to-neutral-100 rounded-xl border border-neutral-200 overflow-hidden hover:shadow-lg hover:scale-[1.02] transition-all duration-300"
                    >
                      <div className="aspect-video bg-gradient-to-br from-primary-500 to-secondary-600 relative overflow-hidden">
                        {relatedPhotos[0] ? (
                          <img 
                            src={relatedPhotos[0].url} 
                            alt={relatedArtist.name}
                            className="w-full h-full object-cover group-hover:scale-110 transition-transform duration-500"
                          />
                        ) : (
                          <div className="flex items-center justify-center h-full">
                            <MusicalNoteIcon className="w-12 h-12 text-white" />
                          </div>
                        )}
                        <div className="absolute inset-0 bg-gradient-to-t from-black/50 to-transparent" />
                        <div className="absolute bottom-4 left-4 right-4">
                          <Badge variant="default" className="bg-white/90 text-neutral-800 text-xs">
                            {getGenre()}
                          </Badge>
                        </div>
                      </div>
                      <div className="p-4">
                        <h3 className="font-semibold text-neutral-900 group-hover:text-primary-600 transition-colors mb-1">
                          {relatedArtist.name}
                        </h3>
                        <div className="flex items-center space-x-2 text-sm text-neutral-600">
                          <StarIcon className="w-4 h-4 text-yellow-500 fill-current" />
                          <span>{relatedArtist.rating.toFixed(1)}</span>
                          <span>â€¢</span>
                          <span>{relatedArtist.yearsActive} years</span>
                        </div>
                      </div>
                    </Link>
                  );
                })}
              </div>
            </div>
          </section>
        )}
      </div>

      {/* Photo Lightbox */}
      <PhotoLightbox
        photos={allPhotos}
        initialIndex={lightboxIndex}
        isOpen={lightboxOpen}
        onClose={() => setLightboxOpen(false)}
      />
    </div>
  );
}